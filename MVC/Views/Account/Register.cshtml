@model MVC.Security.Models.RegisterViewModel
@{
    ViewBag.Title = "Registrarse";
}



<script>

    var hasDataChanged = false;
    $(document).ready(function () {
        $(window).bind('beforeunload', confirmLeave);
        $("#registerForm input").change(function () {
            hasDataChanged = true;
        });
    });

    function confirmLeave() {
        if (hasDataChanged) {
            return "Se perderán los cambios realizados, ¿Desea continuar?";
        };
    };

    function save() {
        var form = $("#registerForm");
        if (form.valid()) {
            hasDataChanged = false;
            form.submit();
        }
    };

</script>

<div class="row">
    <div class="col-12">
        <h1>@ViewBag.Title</h1>
    </div>
</div>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "registerForm" }))
{
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="row">
        <div class="col-4">

            @Html.LabelFor(m => m.UserName)
            @Html.TextBoxFor(m => m.UserName)
            @Html.ValidationMessageFor(m => m.UserName)<br />

            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email)
            @Html.ValidationMessageFor(m => m.Email)<br />

            @Html.LabelFor(m => m.Password)
            @Html.TextBoxFor(m => m.Password, new { type = "password" })
            @Html.ValidationMessageFor(m => m.Password)<br />

            @Html.LabelFor(m => m.ConfirmPassword)
            @Html.TextBoxFor(m => m.ConfirmPassword, new { type = "password" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword)<br />
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            @Html.ActionLink("Cancelar", "Index", "Home", new { Area = "" }, new { @class = "btn_secundario btn-right" })
            <input type="button" onclick="save()" class="btn btn-default" value="Registrarse" />
        </div>
    </div>
}
